name: Integration (compose)
on:
  pull_request:
    branches: [ dev, main ]
  push:
    branches: [ dev ]

jobs:
  integration:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:24-dind
        privileged: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build app image (local)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: torrus-api:ci

      - name: Create .env for compose
        run: |
          cat > .env <<EOF
          LOG_FORMAT=json
          LOG_FILE_PATH=./logs/torrus.log
          LOG_MAX_SIZE=5
          LOG_MAX_BACKUPS=2
          LOG_MAX_AGE_DAYS=7

          ARIA2_RPC_URL=http://aria2:6800/jsonrpc
          ARIA2_SECRET=ci-secret
          ARIA2_TIMEOUT_MS=5000
          EOF

      - name: Start stack
        run: docker compose up -d
        env:
          # If your compose references an image name, map it:
          TORRUS_IMAGE: torrus-api:ci

      - name: Wait for health
        run: |
          for i in $(seq 1 30); do
            if curl -fsS http://localhost:9090/healthz >/dev/null; then
              echo "healthy"; exit 0
            fi
            sleep 1
          done
          echo "service not healthy"; docker compose logs --no-color; exit 1

      - name: Exercise API
        run: |
          curl -fsS -X POST http://localhost:9090/v1/downloads \
            -H "Content-Type: application/json" \
            -d '{"source":"https://speed.hetzner.de/1MB.bin","targetPath":"/data"}' \
            | tee /tmp/new.json

          ID=$(jq -r '.id' </tmp/new.json)
          test -n "$ID"

          curl -fsS -X PATCH "http://localhost:9090/v1/downloads/$ID" \
            -H "Content-Type: application/json" \
            -d '{"desiredStatus":"Paused"}' >/dev/null

          # list
          curl -fsS http://localhost:9090/v1/downloads | jq .

      - name: Logs on failure
        if: failure()
        run: docker compose logs --no-color

      - name: Tear down
        if: always()
        run: docker compose down -v
